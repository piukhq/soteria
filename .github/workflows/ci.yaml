name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - run: pip install poetry
      - run: poetry install
      - run: poetry run flake8
      - run: poetry run black --line-length 120 --check .
      - run: poetry run isort --check --line-length 120 --profile black .
      - run: poetry run xenon --no-assert --max-average A --max-modules B --max-absolute B .
      - run: poetry run mypy soteria
      - run: poetry run pytest --verbose --cov=soteria
  create_tag_release:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: create_tag_release
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - uses: actions/checkout@v2
      - name: tag_check
        run: |
          if ! [[ ${{ github.event.release.tag_name }} =~ [0-9]+.[0-9]+.[0-9]+ ]]; then
            exit 1;
          fi
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - run: pip install poetry poetry-dynamic-versioning
      - run: poetry config repositories.pypicloud https://pypi.tools.uksouth.bink.sh/simple
      - run: poetry config http-basic.pypicloud c02bed7a-4224-4fb4-82ad-17499e4d0e4a ${{ secrets.PYPICLOUD_PASSWORD }}
      - run: poetry build
      - run: poetry publish -r pypicloud
